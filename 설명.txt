1. 아두이노 코드
아날로그 온도 센서를 사용하여 온도 값을 측정하고 시리얼 모니터를 통해 출력합니다.

코드는 다음과 같이 구성됩니다:

setup() 함수:
Arduino 보드의 설정을 초기화하는 함수입니다.
Serial.begin(9600)를 호출하여 시리얼 통신을 9600보 데이터 속도로 초기화합니다.

double th(int v) 함수:
이 함수는 온도 변환을 위한 함수입니다.
int v 매개변수로 아날로그 핀(A0)에서 읽은 값을 받습니다.
아날로그 값을 사용하여 온도를 계산하고, 그 값을 double 형으로 반환합니다.

loop() 함수:
이 함수는 계속해서 반복되며, 센서 값을 읽고 온도를 계산하여 시리얼 모니터에 출력합니다.
int a 변수에 아날로그 핀(A0)에서 읽은 값을 저장합니다.
th(a)를 호출하여 아날로그 값을 온도로 변환하고, 변환된 온도를 시리얼 모니터에 출력합니다.
delay(500)를 호출하여 500 밀리초(0.5초) 동안 대기합니다.

설명:
온도 변환은 옴의 법칙을 사용하여 수행됩니다. 온도 변환에는 온도 센서에 대한 특정한 수식이 사용되며, 해당 수식은 thermistor에 관한 위키백과 링크에서 찾을 수 있습니다.
log(), 수학 연산 및 온도 단위 변환을 통해 아날로그 값을 온도(Celsius)로 변환합니다. 변환된 온도는 시리얼 모니터를 통해 출력됩니다.







2. 프로세싱 코드
컴퓨터와 시리얼 통신을 통해 데이터를 전송받아 해당 데이터에 따라 화면을 갱신하는 간단한 프로그램입니다.

코드의 주요 부분은 다음과 같습니다:

import processing.serial*:
Processing의 시리얼 라이브러리를 가져옵니다. 이 라이브러리를 사용하여 시리얼 통신을 설정하고 데이터를 읽어옵니다.
Serial p;
Serial 객체 p를 선언합니다. 이 객체는 시리얼 통신을 관리하기 위해 사용됩니다.

void setup():
초기 설정을 담당하는 함수입니다.
p = new Serial(this,"COM5", 9600);를 호출하여 "COM5" 포트와 9600 보율로 시리얼 통신을 초기화합니다.
size(400,400);를 호출하여 화면 크기를 400x400 픽셀로 설정합니다.

void draw():
화면을 그리는 함수입니다. 프레임마다 호출되어 화면을 업데이트합니다.
if(p.available()>0)를 사용하여 시리얼 버퍼에 데이터가 있는지 확인합니다.
p.readStringUntil('\n')을 호출하여 시리얼 포트에서 '\n' (개행) 문자까지의 문자열을 읽어옵니다.
읽어온 문자열을 float 타입으로 변환한 후, 이를 센서 값으로 사용합니다.
센서 값에 따라 화면을 설정하고 출력합니다.

설명:
시리얼 통신을 통해 외부 장치에서 전송된 데이터를 받아와서 그 값을 기반으로 화면의 배경 색상을 설정합니다. 만약 센서 값이 28.0보다 크다면 빨간색 배경을, 그렇지 않으면 녹색 배경을 설정합니다.
센서 값을 화면에 출력하고, 텍스트 크기와 위치를 설정하여 해당 값을 화면에 표시합니다.